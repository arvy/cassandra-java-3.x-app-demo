/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cassandra.java.app.demo;


//import com.datastax.oss.driver.api.core.CqlSession;
//import com.datastax.oss.driver.api.core.cql.AsyncResultSet;
//import com.datastax.oss.driver.api.core.cql.SimpleStatement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.util.concurrent.CompletionStage;

public class App4x  {

    public static final Logger logger = LoggerFactory.getLogger(App4x.class.getName());
    public String getGreeting() {
        return "Hello World!";
    }
/*
    public static void main(String[] args) {


        try(CqlSession session = CqlSession.builder()
                    .addContactPoint(InetSocketAddress.createUnresolved("10.101.36.35", 9042))
                    .build() ){


//            statement.enableTracing();
            for(int i=0; i < 75; i++) {

                CompletionStage<AsyncResultSet> result = session.executeAsync("select release_version from system.local");
                result.
//                ResultSet rs = session.execute(statement);    // (3)
                //            for(ExecutionInfo ei : rs.getAllExecutionInfo()){
                //                QueryTrace queryTrace = ei.getQueryTrace();
                //                logger.info("host: {}, achievedCL: {}, queryTrace: {}", ei.getQueriedHost(), ei.getAchievedConsistencyLevel(), queryTrace.toString());
                //                for(QueryTrace.Event event :queryTrace.getEvents()){
                //                    logger.info("Description={}, Source={}, SourceElapsedTimeInMicros={}", event.getDescription(), event.getSource(), event.getSourceElapsedMicros());
                //                }
                //            }
                logger.info("Coordinator: {}", rs.getExecutionInfo().getQueriedHost().toString());
//                Row row = rs.one();
                logger.info(row.getString("release_version"));                          // (4)
            }
        }


    }
 */
}
